package mergeSort;
 
public class Sirala {

public static void main(String[] args){
 
  // Siralanacak sayilar
  int dizi[] = { 6, 5, 9, 3, 1, 0, 8, 7, 2, 4 };
 
  // ilk once siralanacak diziyi ekrana bas
  System.out.println("Dizi :");
 
  for (int i = 0; i < dizi.length; i++) {
   System.out.print(dizi[i] + " ");
  }
 
  System.out.println();
  System.out.println();
 
  int baslangic = 0;
 
  int bitis = dizi.length - 1; 
  
  MergeSort(dizi, baslangic, bitis);
  
  System.out.println(); 
 
  System.out.println("Yeni dizi : ");
 
  for (int m = 0; m < dizi.length; m++) {
   System.out.print(dizi[m] + " ");
  }
 
  System.out.println();
  
 }
 
public static void MergeSort(int[] dizi, int baslangic, int bitis) {
  // p:baslangic indisi; q:bitis indisi
 
  int p = baslangic;
  int r = bitis;
  if (p >= r) {
   return;
  }
 
  int q = (p + r) / 2;
 
  MergeSort(dizi, p, q);
  MergeSort(dizi, q + 1, r);
 
  int basinSonu = q;
  int sonunBasi = q + 1;
 
  while ((p <= basinSonu) && (sonunBasi <= r)) {
   System.out.println("* dizi[" + p + "]: " + dizi[p]);
   System.out.println("* dizi[" + sonunBasi + "]: " + dizi[sonunBasi]);
    
   if (dizi[p] < dizi[sonunBasi]) {
    System.out.println("* " + dizi[p] + " < " + dizi[sonunBasi] + " oldugu icin yer degistirilmedi.");
    p++;
  
   } else {
 
    System.out.println("* " + dizi[p] + " > " + dizi[sonunBasi] + " oldugu icin " + dizi[sonunBasi] + " alÄ±nÄ±r ve dizide " + p + ". yere konur.");
    int Temp = dizi[sonunBasi];
  
    for (int k = sonunBasi - 1; k >= p; k--) {
         dizi[k + 1] = dizi[k];
    }
 
    dizi[p] = Temp;
 
    sonunBasi++;
 
    basinSonu++;
 
    p++;
 
    System.out.println();
 
    for (int k = 0; k < dizi.length; k++) {
        System.out.print(dizi[k] + " ");
    }
 
    System.out.println();
    System.out.println();
 
   }
  }
 }
}
Bu algoritmanın analizine baktığımız zaman O(nlog n) işlem yaptığını görüyoruz, bu algoritmanın performansını 
hesaplamak isteğimizde n eleman sayısı anlamına geliyorsa sizin örnek verdiğiniz dizi [6,3,5,1,8,2,4,7] 8 
elamandan oluşmakta.Q(nlogn ) elde ederiz.Merge Sort algoritması, divide and conquer(parçala ve yönet) metodunu 
kullanarak verileri sıralar. Şöyle ki algoritma, verileri tek eleman kalıncaya kadar recursive fonksiyonlar 
yardımıyla sürekli ikiye böler. Tek kalan elemanları ise kendi aralarında sıralı bir şekilde birleştirmeye başlar.
Tek kalan elemanlar birleştiğinde de dizi sıralanmış olur
